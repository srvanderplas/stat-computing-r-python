{
  "hash": "8fa27381041dcc4954deee3e90bf9ab6",
  "result": {
    "engine": "knitr",
    "markdown": "# Creating Good Charts {#sec-good-graphics}\n\n## Objectives {-}\n\n- Understand what features make graphics effective\n- Evaluate existing charts for accessibility and readability\n- Make improvements to charts to increase comprehension and accessibility\n\n## Introduction\n\nA chart is **good** if it allows the user to draw *useful conclusions that are supported by data*. \nObviously, this definition depends on the purpose of the chart.\nA simple and disposable chart created during an exploratory data analysis process may be useful even if it is not nicely formatted and publication ready, because its purpose is to guide an interactive process. \nThis is very different than a chart created for communicating with the public -- for instance, a forecast map showing possible paths and intensities of a hurricane that would inform resident decisions about storm preparation and/or evacuation. \n\nComprehensive advice on creating good charts is difficult, too, because what works for one dataset may not work for another, even if the variable types are similar. \nWe have some established conventions that should usually be followed (for instance, time usually is placed on the x-axis, with a dependent variable on the y-axis), but there are usually situations where it is reasonable to break those conventions. \n\nFinally, what makes a chart \"good\" requires some additional knowledge beyond statistics and programming.\nTo make good charts, we have to understand how those charts will be interpreted, which means we need at least some basic information about human perception and cognition. \nThe human visual system is incredibly powerful - it has a bandwidth that would make even modern computers jealous, and many computations are performed instantaneously and without requiring any process management (e.g. the calculations happen so fast and so automatically that you aren't really aware that they're happening). \nThis comes with some tradeoffs, though - evolutionary optimizations that ensure that you can spot predators quickly weren't as concerned with your ability to accurately determine the height of a two-dimensional drawing of a three-dimensional object. \nSo, while the visual system has some amazing strengths and is a very useful medium to communicate about data, it is important to understand the limitations of the visual system's sensors, software, short-term and long term memory, and attention. \n\nWe'll start with a short exploration of some foundational concepts related to perception in @sec-cognition-perception. \n@sec-design-process will discuss the design process and how to leverage the grammar of graphics to provide both the full data and visual summaries that highlight key features. \nWhere available, this section incorporates conclusions from empirical studies of charts and graphs to guide design decisions.  \n@sec-annotation expands on this discussion, demonstrating effective use of annotations to provide contextual information that can assist viewers with the interpretation of the data.\nFinally, @sec-checklist provides a guide to evaluating graphics for clarity, effectiveness, accessibility, and common design pitfalls. \n\n\n## Cognitive and Perceptual Foundations {#sec-cognition-perception}\n\nBefore we discuss how to create good charts, there is a certain amount of background information that must be considered.\nCharts make use of the visual system within the human brain, which means we need to understand some basic attributes of human perception and cognition in order to make the best use of this \"wetware\" [@wikipediacontributorsWetwareBrain2025] processing power. \n\n\n<!-- Basic overview of components of the visual system - eye, optic nerve, processing centers of the brain, visual cortex (hardware) and software -->\n\nFirst, let's set the stage. \nInformation in the form of light bounces off objects in the world and lands on our retina (there are lenses and focusing mechanisms that we'll skip). \nThere are four types of light detectors in the retina: three types of cones that respond to red, green, and blue light wavelengths, and rods, which respond to light intensity across wavelengths. Cones are concentrated in one area, while rods are spread across the surface of the retina. \nThe rods and cones turn light into neural impulses, which are transmitted along the optic nerve to the **visual cortex** located in the back of the brain (roughly where your head would hit the floor when you are lying down).\nThe visual cortex contains special neurons called feature detectors which organize the information from the retina and reconstruct this information into a mental representation of the world. \nSome feature detectors respond to specific angles, signals from specific parts of the retina corresponding to specific parts of the outside world, and many other low-level features. \nSignals from these feature detectors are then aggregated into higher-level concepts that form our visual experience of the world.\n\nThe initial light signals and lower-level information are sometimes called \"sensation\", and the ability to detect higher-level concepts is called \"perception\". We can also think of \"top-down\" perception, where our experience shapes what we perceive and how we experience the world, compared to \"bottom-up\" perception, where we construct higher-level concepts solely from lower-level signals. \n\nPerception tends to require a few other mental resources beyond the visual detection and processing equipment (eyes, visual cortex, etc.): attention and memory (short and long-term) are vital for processing the visual input and making sense out of it.\nThe next few subsections provide specific examples of why it's important to understand the basics of the visual system when thinking about how to construct charts and graphs. \n\n\n### Color\n\nOur eyes are optimized for perceiving the yellow/green region of the color spectrum, as shown in @fig-sensitivity. \nWhy? Well, our sun produces yellow light, and plants tend to be green. \nIt's pretty important to be able to distinguish different shades of green (evolutionarily speaking) because it impacts your ability to feed yourself. \nThere aren't that many purple or blue predators, so there is less selection pressure to improve perception of that part of the visual spectrum.\n\n![Sensitivity of the human eye to different wavelengths of visual light (Image from [Wikimedia commons](https://upload.wikimedia.org/wikipedia/commons/c/c0/Eyesensitivity.svg))](../images/wrangling/Eyesensitivity.png){#fig-sensitivity fig-alt=\"The image is a graph illustrating eye color sensitivity in relation to the visible light spectrum, from around 400 to 700 nanometers. It features a large, smooth bell curve with a peak in the green wavelength range, indicating maximum sensitivity. The spectrum is displayed as a gradient, transitioning smoothly from violet on the left to red on the right. The vertical axis shows percentage sensitivity from 0 to 100, marked at intervals of 10.\" width=\"50%\"}\n\n\nNot everyone perceives color in the same way. Some individuals are [colorblind or color deficient](https://en.wikipedia.org/wiki/Color_blindness) [@wikipediacontributors23c]. \nWe have 3 cones used for color detection, as well as cells called rods, which detect light intensity (brightness/darkness). \nIn about 5% of the population (10% of XY individuals, 0.2% of XX individuals), one or more of the cones may be missing or malformed, leading to color blindness - a reduced ability to perceive different shades. \nThe rods, however, function normally in almost all of the population, which means that light/dark contrasts are extremely safe, while contrasts based on the hue of the color are problematic in some instances.\n\n:::: {.callout collapse=true}\n#### Demo: Types of Colorblindness {-}\n\nSimulations of the same rainbow color scheme map under different types of colorblindness, generated using [CoBliS](https://www.color-blindness.com/coblis-color-blindness-simulator/). While colorblindness simulations can be useful, as colorblindness is a result of one of many different mutations, simulators do not cover all of the different color vision mutations which exist. \n\n::: {layout=\"[[-.25, 1, -0.25],[1,1,1],[1,1,1]]\"}\n\n![Original (Normal Color Vision)](../images/wrangling/evapotranspiration-map.jpg){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-normal}\n\n![Protanomaly (Weak red vision)](../images/wrangling/evapotranspiration-map-protanomaly.png){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-protanomaly}\n\n\n![Deuteranomaly (Weak green vision)](../images/wrangling/evapotranspiration-map-deuteranomaly.png){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-deuteranomaly}\n\n![Tritanomaly (Weak blue vision)](../images/wrangling/evapotranspiration-map-tritanomaly.png){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-tritanomaly}\n\n\n![Protanopia (No red cone)](../images/wrangling/evapotranspiration-map-protanopia.png){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-protanopia}\n\n![Deuteranopia (No green cone)](../images/wrangling/evapotranspiration-map-deuteranopia.png){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-deuteranopia}\n\n![Tritanopia (No blue cone)](../images/wrangling/evapotranspiration-map-tritanopia.png){fig-alt=\"The image is a detailed map of the contiguous United States highlighting the estimated fraction of precipitation lost to evapotranspiration from 1971 to 2000. The map is divided into multicolored geographic blocks representing different evapotranspiration ratios. Colors range from purple, signifying a ratio of 0.0 to 0.09, to red, representing a ratio of 1.2 to 1.29. The western part of the country predominantly features warmer colors like yellow and orange, indicating higher evapotranspiration ratios, whereas the eastern part is depicted mostly in cooler colors such as blue and green, showing lower ratios. The map includes a legend on the bottom left, providing a key for understanding the color-coded ratios.\" #fig-colorblind-map-tritanopia}\n\n:::\n\n::::\n\n::: {.callout-note collapse=true}\n\n#### Colorblindness Testing\nYou can take a test designed to screen for colorblindness [here](https://eyeque.com/color-blind-test/). \nYour monitor may affect how you score on these tests - I am colorblind, but on some monitors, I can pass the test, and on some, I perform worse than normal. \nA different test is available [here](https://www.color-blindness.com/farnsworth-munsell-100-hue-color-vision-test/).\n\n::: {layout-ncol=3}\n![My results on one monitor](../images/wrangling/colorblindness_monitorLG.png){.lightbox fig-alt=\"Colorblindness test results: Various color deficiencies. Reports low deuteranopia/anomaly, no protanopia/anomaly and low tritanopia/anomaly.\"} \n\n![My results on a monitor that has a different tech and supposedly higher color fidelity](../images/wrangling/colorblindness_monitorDell.png){.lightbox fig-alt=\"Colorblindness test results: Various color deficiencies. Reports no deuteranopia/anomaly, and low protanopia/anomaly and tritanopia/anomaly.\"}\n\n![The Munsell colorblindness test](../images/wrangling/colorblind_munsell.png){.lightbox fig-alt=\"The image shows an interface of the Farnsworth-Munsell 100 Hue Color Vision Test. At the top are navigation tabs labeled: Introduction, Instructions, Test Score, Interpretation, and Comparison Group. Below the tabs, on the left, is a circular graph called the Personal Error Score Diagram. It features a central circle with grid lines radiating outward. The circle is surrounded by a ring of smaller colored circles, forming a gradient that transitions through various hues. A thick black line traces the perimeter of the central circle, indicating score errors in different segments. The colors range from red, yellow, green, and blue. Significant error points are highlighted on the chart, and a large section in purple is shaded to indicate potential color confusion. To the right, explanatory text describes the test results, with sections titled: Personal Error Score Diagram, Your Total Error Score (TES): 72, and Typical Confusion Areas. Below this, there is a multiple-choice section with options to indicate different types of color blindness, including Red-Blind (protan), Green-Blind (deutan), and Blue-Blind (tritan), with the Blue-Blind option selected.\"}\n:::\n\n\nIn reality, I know that I have issues with perceiving some shades of red, green, and brown. I have particular trouble with very dark or very light colors, especially when they are close to grey or brown.\n\n:::\n\n\nIn addition to colorblindness, there are other factors than the actual color value which are important in how we experience color, such as context.\n\n\n\n\n::: {#fig-checker-shadow .cell layout=\"[[-10, 30, -20, 20, -10]]\"}\n::: {.cell-output-display}\n![The original illusion](../images/wrangling/CheckerShadow.png){#fig-checker-shadow-1 width=100%}\n:::\n\n::: {.cell-output-display}\n![The illusion with the checkerboard and shadow removed](../images/wrangling/CheckerShadow2.png){#fig-checker-shadow-2 width=100%}\n:::\n\nThe color constancy illusion. The squares marked A and B are actually the same color.\n:::\n\n\nOur brains are extremely dependent on context and make excellent use of the large amounts of experience we have with the real world. \nAs a result, we implicitly \"remove\" the effect of things like shadows as we make sense of the input to the visual system. \nThis can result in odd things, like the checkerboard and shadow shown in @fig-checker-shadow - because the brain automatically corrects for the shadow, B looks lighter than A, even though when the context is removed they are clearly the same shade.\n\n#### Takeaways {-}\n\n- Do not use rainbow color gradient schemes \n    - because of the unequal perception of different wavelengths, these schemes are *misleading* - the color distance does not match the perceptual distance.\n- Avoid any scheme that uses green-yellow-red signaling if you have a target audience that may include colorblind people.\n- To \"colorblind-proof\" a graphic:\n    - double encoding - where you use color, use another aesthetic (line type, shape) as well to help your colorblind readers out\n    - If you can print your chart out in black and white and still read it, it will be safe for colorblind users. This is the only foolproof way to do it!\n    - If you are using a color gradient, use a **monochromatic color scheme** where possible. This is perceived as light -\\> dark by colorblind people, so it will be correctly perceived no matter what color you use.\n    - If you have a **bidirectional scale** (e.g. showing positive and negative values), the safest scheme to use is purple - white - orange. In any color scale that is multi-hue, it is important to transition through white, instead of from one color to another directly.\n\n- Be conscious of what certain colors \"mean\"\n    - Leveraging common associations can make it easier to read a color scale and remember what it stands for\n        - blue for cold, orange/red for hot is a natural scale\n        - red = Republican and blue = Democrat in the US (since ~1980)\n        - white -\\> blue gradients for showing rainfall totals\n    - Some colors can can provoke emotional responses that may not be desirable.[^10-graphics-2]\n    - Consider the social baggage that certain color schemes may have\n        - pink/blue color scheme often used for gender may be polarizing\n        - Consider using a cooler color (blue or purple) for men and a warmer color (yellow, orange, lighter green) for women[^10-graphics-3].\n        \n- There are packages such as `RColorBrewer` and `dichromat` that have color palettes which are aesthetically pleasing, and, in many cases, colorblind friendly (`dichromat` is better for that than `RColorBrewer`). You can also take a look at other [ways to find nice color palettes](https://lisacharlotterost.de/2016/04/22/Colors-for-DataVis/).\n\n[^10-graphics-2]: When the COVID-19 outbreak started, many maps were using white-to-red gradients to show case counts and/or deaths. [The emotional association between red and blood, danger, and death may have caused people to become more frightened than what was reasonable given the available information.](https://www.esri.com/arcgis-blog/products/product/mapping/mapping-coronavirus-responsibly/)\n\n[^10-graphics-3]: Lisa Charlotte Rost. [What to consider when choosing colors for data visualization.](https://www.dataquest.io/blog/what-to-consider-when-choosing-colors-for-data-visualization/)\n\n### Preattentive Features\n\nYou've almost certainly noticed that some graphical tasks are easier than others. \nPart of the reason for this is that certain tasks require active engagement and attention to search through the visual stimulus; others, however, just \"pop\" out of the background.\nWe call these features that just \"pop\" without active work **preattentive** features; technically, they are detected within the first 250ms of viewing a stimulus [@treisman_preattentive_1985].\n\nTake a look at @fig-preattentive1; can you spot the point that is different?\n\n\n::: {#fig-preattentive1 .cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Shape](02c-good-graphics_files/figure-html/fig-preattentive1-1.png){#fig-preattentive1-1 width=1200}\n:::\n\n::: {.cell-output-display}\n![Color](02c-good-graphics_files/figure-html/fig-preattentive1-2.png){#fig-preattentive1-2 width=1200}\n:::\n\nTwo scatterplots with one point that is different. Can you easily spot the different point?\n:::\n\n\nColor and shape are commonly used graphical features that are processed pre-attentively. \nSome people suggest utilizing this to pack more dimensions into multivariate visualizations [@healey_high-speed_1996], but in general, knowing which features are processed more quickly (color/shape) and which are processed more slowly (combinations of preattentively processed features) allows you to design a chart that requires less cognitive effort to read.\n\nAs awesome as it is to be able to use preattentive features to process information, we cannot use combinations of preattentive features to show different variables - these combinations are no longer processed preattentively. \nTake a look at @fig-preattentive2 - part (a) shows the same grouping in color and shape, part (b) shows color and shape used to encode different variables. \n\n\n::: {#fig-preattentive2 .cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Shape and Color (dual encoded)](02c-good-graphics_files/figure-html/fig-preattentive2-1.png){#fig-preattentive2-1 width=1200}\n:::\n\n::: {.cell-output-display}\n![Shape and Color (different variables)](02c-good-graphics_files/figure-html/fig-preattentive2-2.png){#fig-preattentive2-2 width=1200}\n:::\n\nTwo scatterplots. Can you easily spot the different point(s)?\n:::\n\n\nHere, it is easy to differentiate the points in @fig-preattentive2(a), because they are dual-encoded. However, it is very difficult to pick out the different groups of points in @fig-preattentive2(b) because the combination of preattentive features requires active attention to sort out.\n\n#### Takeaways {-}\n\nCareful use of preattentive features can reduce the cognitive effort required for viewers to perceive a chart. \n\nEncode only one variable using preattentive features, as combinations of preattentive features are not processed preattentively.\n\n\n### Short Term Memory\n\nWe have a limited amount of memory that we can instantaneously utilize. \nThis mental space, called **short-term memory**, holds information for active use, but only for a limited amount of time.\n\n:::: example\n#### Try it out! {-}\n\n::: {.callout collapse=true}\n##### Click here, read the information, and then click to hide it. {-}\n\n1 4 2 2 3 9 8 0 7 8\n:::\n\n::: {.callout collapse=true}\n##### Wait a few seconds, then expand this section {-}\n\nWhat was the third number?\n:::\n\n::::\n\nWithout rehearsing the information (repeating it over and over to yourself), the try it out task may have been challenging. \nShort term memory has a capacity of between 3 and 9 \"bits\" of information.\n\nIn charts and graphs, short term memory is important because we need to be able to associate information from e.g. a key, legend, or caption with information plotted on the graph. \nIf you try to plot more than \\~6 categories of information, your reader will have to shift between the legend and the graph repeatedly, increasing the amount of cognitive labor required to digest the information in the chart.\n\nWhere possible, try to keep your legends to 6 or 7 characteristics.\n\n\n#### Takeaways {-}\n\n-   Limit the number of categories in your legends to minimize the short term memory demands on your reader.\n\n    -   When using continuous color schemes, you may want to use a log scale to better show differences in value across orders of magnitude.\n\n-   Use colors and symbols which have implicit meaning to minimize the need to refer to the legend.\n\n-   Add annotations on the plot, where possible, to reduce the need to re-read captions.\n\n### Grouping and Sense-making\n\nThe catchphrase of Gestalt psychology is\n\n> The whole is greater than the sum of the parts\n\nThat is, what we perceive and the meaning we derive from the visual scene is more than the individual components of that visual scene.\n\nOur brains have to be very good at imposing order on visual chaos -- there is a *huge* amount of information being processed by the visual system all the time, and some basic heuristics (guesses/shortcuts) are important in this process. \n\nWhen we create charts, it becomes important to understand these heuristics so that we can make it easier for people to understand the data. \nWorking with the natural sense making algorithms in the brain requires less cognitive effort, which leaves more space for thinking about the data. \n\nLet's start with a few examples that show how the brain constructs meaning from ambiguous or conflicting stimuli. \n\n:::: demo\n#### Demo: Constructing Visual Meaning\n\n::: panel-tabset\n##### Ambiguous Image {.unnumbered}\n\nWhat does @fig-rabbit-duck look like to you?\n\n![Is it a rabbit, or a duck?](../images/wrangling/duckrabbit.png){#fig-rabbit-duck width=\"50%\" fig-alt=\"An ambiguous image: when viewed from the right side, it looks like a duck, and when viewed from the bottom side, it looks like a rabbit. The x and y axes are labeled as 'rabbit' and 'duck', respectively.\"}\n\nWhen faced with ambiguity, our brains use available context and past experience to try to tip the balance between alternate interpretations of an image. \nWhen there is still some ambiguity, many times the brain will just decide to interpret an image as one of the possible options.\nSometimes, the brain will even flip between the possible options, as in the [Necker cube](https://en.wikipedia.org/wiki/Necker_cube) illusion. \n\n##### Illusory Contours {.unnumbered}\n\n![Consider this image - what do you see?](../images/wrangling/IllusoryContour.png){fig-alt=\"An Illusory contour. It appears to be 3 black circles arranged in a downward-pointing triangle, with a black outline of a triangle pointing upward, and a background-colored (white) downward pointing triangle overlaid on top of the two previously described triangles. In reality, what is shown is a sequence of three pac-man shapes, with the missing pieces oriented inwards, at approximately 30, 150, and 270 degrees from the positive x-axis, with three 60 degree acute angle shapes oriented at 90, 210, and 330 degrees from the positive x-axis. The appearance of two triangles superimposed is an illusory contour that results from Gestalt heuristics.\" width=\"30%\" }\n\nDid you see something like \"3 circles, a triangle with a black outline, and a white triangle on top of that\"? \nIn reality, there are 3 angles and 3 pac-man shapes. \nBut, it's much more likely that we're seeing layers of information, where some of the information is obscured (like the \"mouth\" of the pac-man circles, or the middle segment of each side of the triangle). \nThis explanation is simpler, and more consistent with our experience.\n\nThis illusory contour image is closely related to the Gestalt concepts of closure and \"good figure\". \n\n##### Figure/Ground {.unnumbered}\n\nConsider the logo for the Pittsburgh Zoo.\n\n![](../images/wrangling/Pittsburgh_Zoo_logo.png){fig-alt=\"The logo of the Pittsburgh Zoo, which manipulates figure-ground perception. If the black portion of the image is considered the figure, the viewer sees a tree and some birds flying; if the white portion of the image is considered the figure, then the viewer sees a gorilla facing a lion, with some fish jumping above the waves at the bottom of the image. When viewed for several minutes, the figure and ground tend to 'flip' back and forth.\" width=\"50%\"}\n\nDo you see the gorilla and lionness? \nOr do you see a tree? \nHere, we're not entirely sure which part of the image is the figure and which is the background.\n\nOne of the first tasks we have when confronted with a visual scene is to separate the important part of the image (the figure) from the background. \nIn most cases this is straightforward, but occasionally, artificial images (as opposed to real world scenes) can be hard to interpret. \nThe zoo logo shown above leverages this ambiguity to capture your visual attention. \n\n:::\n\nThe ambiguous figures shown above demonstrate that our brains are actively imposing order upon the visual stimuli we encounter. \n::::\n\n\nThe Gestalt heuristics attempt to explain how our brains group and order visual stimuli to make sense of the world. \nYou can read about the gestalt rules [here](https://en.wikipedia.org/wiki/Principles_of_grouping), but they are also demonstrated in @fig-gestalt-summary.\n\n![The Gestalt Heuristics help us to impose order on ambiguous visual stimuli.](../images/wrangling/gestalt.jpg){fig-alt=\"The word GESTALT, written such that there is a white bar over the G, illustrating the principle of closure, the E is made up of black squares, indicating proximity, the S has a bar going through it such that the middle part of the S is behind the bar, illustrating continuation, the Ts are both striped, illustrating similarity, and the A and L are smushed together, with a tree appearing within the A (the bar is missing across the A) to illustrate figure/ground.\" #fig-gestalt-summary}\n\nIn graphics, we make use of the Gestalt principles of grouping to create order and meaning. \nIf we color points by another variable, we are creating groups of similar points which assist with the perception of groups instead of individual observations. \nIf we add a trend line, we create the perception that the points are moving \"with\" the line (in most cases), or occasionally, that the line is dividing up two groups of points. \nDepending on what features of the data you wish to emphasize, you might choose different aesthetics mappings, facet variables, and factor orders.\n\n:::: demo\n#### Demo: Grouping and Geometries {-}\n\nSuppose I want to emphasize the change in life expectancy between 1982 and 2007. \nFor this, we'll use the Gapminder [@gapminder] data which is found in the `gapminder` packages in R and python. \n\n::: panel-tabset\n##### R {.unnumbered}\n\n::: {#fig-emphasis-gapminder-r .cell layout-ncol=\"3\" lightbox='true'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(gapminder)\nlibrary(ggplot2)\nlibrary(dplyr)\n\ngapminder %>%\n  filter(year %in% c(1982, 2007)) %>%\n  filter(country %in% c(\"Korea, Rep.\", \"China\", \"Afghanistan\", \"India\")) %>%\n  ggplot(aes(x = country, y = lifeExp, fill = factor(year))) +\n  geom_col(position = \"dodge\") +\n  coord_flip() +\n  ylab(\"Life Expectancy\")\n\ngapminder %>%\n  filter(year %in% c(1982, 2007)) %>%\n  filter(country %in% c(\"Korea, Rep.\", \"China\", \"Afghanistan\", \"India\")) %>%\n  ggplot(aes(x = year, y = lifeExp, color = country)) +\n  geom_line() +\n  ylab(\"Life Expectancy\")\n\ngapminder |>\n  filter(year %in% c(1982, 2007)) |>\n  ggplot(aes(x = factor(year), y = lifeExp)) + \n  geom_boxplot() + \n  ylab(\"Life Expectancy\")\n\n```\n\n::: {.cell-output-display}\n![A bar chart allows comparisons of change over time for each country as well as cross-country comparisons.](02c-good-graphics_files/figure-html/fig-emphasis-gapminder-r-1.png){#fig-emphasis-gapminder-r-1 width=1200}\n:::\n\n::: {.cell-output-display}\n![A line chart centers changes over time for each country.](02c-good-graphics_files/figure-html/fig-emphasis-gapminder-r-2.png){#fig-emphasis-gapminder-r-2 width=1200}\n:::\n\n::: {.cell-output-display}\n![A boxplot shows overall change in aggregate over time, but does not show individual country data.](02c-good-graphics_files/figure-html/fig-emphasis-gapminder-r-3.png){#fig-emphasis-gapminder-r-3 width=1200}\n:::\n\nThree different charts created from the same data. Which one best demonstrates that in every country, the life expectancy increased between 1982 and 2007?\n:::\n\n##### Python {.unnumbered}\n\n\n::: {#fig-emphasis-gapminder-py .cell layout-ncol=\"3\" lightbox='true'}\n\n```{.python .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# %pip install gapminder\nfrom gapminder import gapminder\nimport pandas as pd\nimport seaborn as sns\nimport seaborn.objects as so\nimport matplotlib.pyplot as plt # to clear plots\n\nmy_gap = gapminder.query('year.isin([1982,2007])')\nmy_gap = my_gap.query('country.isin([\"Korea, Rep.\", \"China\", \"Afghanistan\", \"India\"])')\nmy_gap = my_gap.assign(yearFactor=pd.Categorical(my_gap.year))\n\nplot = so.Plot(my_gap, x = \"country\", y = \"lifeExp\", color = \"yearFactor\").\\\n  add(so.Bar(), so.Dodge()).\\\n  label(y = \"Life Expectancy\")\nplot.show()\n```\n\n::: {.cell-output-display}\n![A bar chart allows comparisons of change over time for each country as well as cross-country comparisons.](02c-good-graphics_files/figure-html/fig-emphasis-gapminder-py-1.png){#fig-emphasis-gapminder-py-1 width=614}\n:::\n\n```{.python .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nplt.clf() # Clear plot workspace\n\nplot = so.Plot(my_gap, x = \"year\", y = \"lifeExp\", color = \"country\").\\\n  add(so.Lines()).\\\n  label(y = \"Life Expectancy\")\nplot.show()\n```\n\n::: {.cell-output-display}\n![A line chart centers changes over time for each country.](02c-good-graphics_files/figure-html/fig-emphasis-gapminder-py-2.png){#fig-emphasis-gapminder-py-2 width=614}\n:::\n\n```{.python .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nplt.clf()  # Clear plot workspace\n\nsns.boxplot(data = my_gap, x = \"year\", y = \"lifeExp\")\nplt.show()\n```\n\n::: {.cell-output-display}\n![A boxplot shows overall change in aggregate over time, but does not show individual country data.](02c-good-graphics_files/figure-html/fig-emphasis-gapminder-py-3.png){#fig-emphasis-gapminder-py-3 width=384}\n:::\n\nThree different charts created from the same data. Which one best demonstrates that in every country, the life expectancy increased between 1982 and 2007?\n:::\n\n\n:::\n\n\nIf the goal is to emphasize that every single country had an increase in life expectancy over the period, the best chart is the line chart - we can see upward slopes for each country leading to the conclusion that life expectancy increased. \nThis leverages the Gestalt principles of \"similarity\" and \"common fate\". \nSimilarity, in that all lines point in the same direction, and common fate (often used for motion, e.g. a flock of birds are a group because they move together) because the lines are all \"moving together\". \n\nWe can derive the same information from the bar chart, but we have to work a bit more for it, because we naturally group bars together by country (proximity) and by year (similarity). \nWe have to then notice that the 2007 bar is bigger for each country to come to the same conclusion -- this takes a bit more cognitive effort.\n\nWe cannot get the specifics from the box plot, because we cannot see individual country data. \nThis is a case where a summary statistic actually destroys the conclusion we might want to draw from the data and leaves us with weaker information - we can see that there is an increase in the minimum, median, and maximum life expectancy, but it is possible to have this and still have a single-country decrease in life expectancy, so we cannot draw the same conclusion from the box plot that we can from the bar or line charts. \n\n\n::::\n\nThe geometric mappings and aesthetic choices you make when creating plots have a huge impact on the conclusions that you (and others) can easily make when examining plots.\nChoosing the wrong geometry or statistic can obscure the point you want to make using the data, leading your reader to draw a conclusion that is unsupported, less important, or misleading. \n\nOn the other hand, using aesthetic mappings to highlight information can ensure that viewers see the important information you're trying to communicate [^10-graphics-4], and can even tilt the balance when two equally valid conclusions are present in a chart. \nThis power should be used responsibly. \n\n[^10-graphics-4]: See [this paper](https://doi.org/10.1080/10618600.2016.1209116) for more details. This is the last chapter of my dissertation, for what it's worth. It was a lot of fun. (no sarcasm, seriously, it was fun!)\n\n\n:::: demo\n\n#### Demo: Facets and Grouping {-}\n\nWhen creating a visualization that involves many different (usually categorical) variables, it is important to decide which variable is the **primary** comparison of interest. \nThis variable is the one which should be shown in the most easily comparable way -- usually, directly on the same plot. \n\nLet's look at the `palmerpenguins` data. We have several categorical variables: `species`, `island`, `year` (technically numerical, but there are only 3 years), and `sex`. \nThe most interesting part of this data set is how the morphology (measurements) of penguins changes based on their sex and species, so let's explore what different charts examining `bill_len` and `body_mass` might look like across those variables. \nFor this example, I'll drop penguins with an unidentified sex for visual simplicity. \n\n\n::: {#fig-palmer-penguins-facets .cell layout=\"[[-1,2,-1],[1,1]]\" lightbox='{\"group\":\"penguins-facets\"}'}\n::: {.cell-output-display}\n![This plot uses shape, color, and linetype to distinguish the different groups. It's cluttered, but it is possible to make comparisons across species and sex](02c-good-graphics_files/figure-html/fig-palmer-penguins-facets-7.png){#fig-palmer-penguins-facets-1 width=2100}\n:::\n\n::: {.cell-output-display}\n![This plot facets by species, allowing the user to make easy comparisons across sex for each species separately. Cross species comparisons are somewhat more difficult in this plot because the viewer must shift back and forth between panels.](02c-good-graphics_files/figure-html/fig-palmer-penguins-facets-8.png){#fig-palmer-penguins-facets-2 width=2100}\n:::\n\n::: {.cell-output-display}\n![This plot facets by sex, allowing the user to make easy judgments about the effect of species on measurements. Comparisons between sexes must be made across panels, and require more cognitive effort.](02c-good-graphics_files/figure-html/fig-palmer-penguins-facets-9.png){#fig-palmer-penguins-facets-3 width=2100}\n:::\n\nThree views of the `palmerpenguins` data comparing bill_len and body_mass across sex and species. Click on figures to enlarge.\n:::\n\n\nWhich plot makes it easier to answer the following questions:\n\n- Which species of penguin has the most overlap between the size of males and females?\n- Which species of penguin is the most physically different across both males and females?\n- What is the overall relationship across species for the size of males vs. females?\n\nDifferent aesthetic mappings and facets can lead to different overall conclusions from the same data. \nIt is important when you are exploring data to generate many different plots, so that you get a more comprehensive picture of your data. \nWhen you want to explain the data to others, it is equally important to carefully choose the most important findings from the data and present charts that back up those findings. \n\n::::\n\n\n## Designing Good Graphics Using the Grammar {#sec-design-process}\n\n### Representing Data Accurately\n\nIn order to read data off of a chart correctly, several things must happen in sequence:\n\n1. The data must be accurately written to the chart, that is, the transformation from data -> geometry must be accurate\n2. The geometric objects that make up the chart must be perceived accurately - the mapping from geometric object size or location to mental model of geometric object size or location must be correct.\n3. The mental model of geometric object size or location must be accurately converted to a numerical value. We know that this isn't lossless, but we hope that this is at least reasonably accurate. \n\nIf step 1 is not done correctly, the chart is misleading or inaccurate. \nHowever, steps 2 and 3 depend on our brains accurately **perceiving** and **estimating** information mentally. \nThese steps can involve a lot of effort, and as mental effort increases, we tend to take shortcuts. \nSometimes, these shortcuts work well, but not always.\n\nWhen you design a chart, it's good to consider what mental tasks viewers of your chart need to perform. \nThen, ask yourself whether there is an equivalent way to represent the data that requires fewer mental operations, or a different representation that requires **easier** mental calculations.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Which of the lines is the longest? Shortest? It is much easier to determine the relative length of the line when the ends are aligned. The three lines have the same length in both panels, but the operation is much more difficult when the lines do not start or end at the same place.](02c-good-graphics_files/figure-html/accuracy-guidelines-1.png){fig-alt='A chart with two panels. The left panel is labeled \\'Aligned scale\\' and features three lines of different lengths which all start at the bottom of the chart. The right panel is labeled \\'Unaligned scale\\' and features three lines of different lengths which start at different locations.  It is easier to compare the lengths of the lines in the left panel, since they all start in the same place.' width=75%}\n:::\n:::\n\n\nWhen making judgments corresponding to numerical quantities, there is an order of tasks from easiest (1) to hardest (6), with equivalent tasks at the same level. \nSee [this paper](https://www.doi.org/10.2307/2288400) for the major source of this ranking; other follow-up studies have been integrated, but the essential order is largely unchanged.\n\n\n1.  Position (common scale)\n2.  Position (non-aligned scale)\n3.  Length, Direction, Angle, Slope\n4.  Area\n5.  Volume, Density, Curvature\n6.  Shading, Color Saturation, Color Hue\n\n\nIf we compare a pie chart and a stacked bar chart, the bar chart asks readers to make judgments of position on a non-aligned scale, while a pie chart asks readers to assess angle.\nThis is one reason why pie charts tend not to be a good general option -- people must compare values using area or angle instead of position or length, which is a more difficult judgment under most circumstances. \nWhen there are a limited number of categories (2-4) and you have data that is easily compared to quarters of a circle, it may be justifiable to use a pie chart over a stacked bar chart - some studies have shown that pie charts are preferable under these conditions. \nAs a general rule, though, we have an easier time comparing position than angle or area. \n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Stacked bar chart](02c-good-graphics_files/figure-html/pie-vs-bar-1.png){fig-alt='A stacked bar chart showing the proportion of people living in North America by country' width=1200}\n:::\n\n::: {.cell-output-display}\n![Pie chart](02c-good-graphics_files/figure-html/pie-vs-bar-2.png){fig-alt='A pie chart showing the proportion of people living in North America by country' width=1200}\n:::\n\nStacked bar and pie charts showing the relative proportion of people in North America living in the US, Canada, and Mexico in 2007. Which chart is easier to read relative information (e.g. there are about 3x as many people living in Mexico as Canada) from? Which chart is easier to estimate raw proportions (e.g. the US makes up about 70% of the population of North America) from?\n:::\n\n\n\n\nWhen creating a chart, it is helpful to consider which variables you want to show, and how accurate reader perception needs to be to get useful information from the chart. \nIn many cases, less is more - you can easily overload someone, which may keep them from engaging with your chart at all [@contiAttackingInformationVisualization2005].\nVariables which require the reader to notice small changes should be shown on position scales (x, y) rather than using color, alpha blending, etc.\n\nConsider the hierarchy of graphical tasks again.\n\nYou may notice a general increase in dimensionality from 1-3 to 4 (2d) to 5 (3d). \nIn general, showing information in 3 dimensions when 2 will suffice can be misleading. \nJust *how* misleading depends a lot on the type of chart you're using.\nMost of the time, the addition of an extra dimension causes an increase in chart area allocated to the item that is disproportionate to the actual numerical value being represented.\n\n\n\n![Here, the area and height both encode the same variable, leading to a far disproportionate number of pixels allocated to \"Stocks\" than \"Cash Investments\" (h/t Junk Charts). In the first chart, stocks make up 60% of the portfolio, but have 67.5% of the pixels; Cash makes up 5% of the portfolio but those investments represent 2.3% of the pixels.](../images/wrangling/3d_graphs_suck.jpg){#fig-disproportionate-pixels fig-alt=\"A three-dimensional pie chart, where each of the sections has a different height - this seems to double-encode the value represented by the angle of the pie slice. As a result, the area of the chart devoted to one sector is vastly larger than the area of the chart devoted to the other sectors, even though the true values are not nearly so different.\"}\n\nExtra dimensions and other annotations are sometimes called \"chartjunk\" and should only be used if they contribute to the overall numerical accuracy of the chart (e.g. they should not just be for decoration).\n\n::: column-margin\n\n{{< video https://youtu.be/E91bGT9BjYk title=\"Ted ED: How to spot a misleading graph - Lea Gaslowitz\" >}}\n\n[Business Insider: The Worst Graphs Ever](https://www.businessinsider.com/the-27-worst-charts-of-all-time-2013-6)\n\n:::\n\n### Show the Data\n\nThis section is inspired by Chapter 8 of Getting More out of Graphics by Antony Unwin. \nWe'll work with the FIDE (International Chess Federation) data, which ranks individual chess players using all official games. \nThe `Chess2020` object from the `ChessGmooG` data package created to accompany Getting More out of Graphics contains the rankings from December 2020.\n\n:::: setup\n\n#### Chess Data Setup {-}\n\nFirst, we need to do a bit of data setup so that both R and Python can access the data. \nThis time, it's critical to run the R code first and then python, since we're exporting the data from R to a CSV that can be read in using python. \n\n::: panel-tabset\n\n##### R {-}\n\n::: {.cell}\n\n```{.r .cell-code}\n## packages for the chapter\n# install.packages(c(\"ggridges\", \"ChessGmooG\")) # <0>\n\nlibrary(ChessGmooG) # <1>\ndata(Chess2020) # <2>\nreadr::write_csv(Chess2020, file = \"../data/Chess2020.csv\") # <3>\n```\n:::\n\n0. Install the R packages necessary for this example\n1. Load the data package\n2. Load the data\n3. Export the data to CSV so it can be loaded in Python\n\n\n##### Python{-}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\nChess2020 = pd.read_csv(\"../data/Chess2020.csv\")\n```\n:::\n\n\n\n:::\n\n::::\n\n\n:::: example\n#### Exploring Distributions: Rating and Age\n\nFirst, it's a good idea to generate some basic distributional plots to explore the contents of the data. \n\n::: panel-tabset\n\n##### R {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ntheme_set(theme_bw())\nlibrary(dplyr)\n\nggplot(Chess2020, aes(x = DEC20)) + \n  geom_histogram(binwidth = 10) + \n  xlab(\"Rating\") + ylab(\"# Players\")\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-3-1.png){fig-alt='A histogram of FIDE Rating by number of players. The distribution starts at 1500 players with a rating of 1000, and increases to a peak of 3500 players at a rating of 1750. There is a sharp increase in the number of players at rating 2000, and then a steep decline until 2750, where the bins disappear.' width=100%}\n:::\n:::\n\n\n\n##### Python {-}\n\n::: {.cell}\n\n```{.python .cell-code}\nimport seaborn.objects as so\nimport seaborn as sns\nimport matplotlib.pyplot as plt # Set figure size\nplt.figure(figsize=(6,2))\n\nso.Plot(Chess2020, x = \"DEC20\").add(so.Bars(), so.Hist(binwidth=10)).label(x = \"Rating\", y = \"# Players\").show()\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-4-1.png){fig-alt='A histogram of FIDE Rating by number of players. The distribution starts at 1500 players with a rating of 1000, and increases to a peak of 3500 players at a rating of 1750. There is a sharp increase in the number of players at rating 2000, and then a steep decline until 2750, where the bins disappear.' width=100%}\n:::\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-4-2.png){fig-alt='A histogram of FIDE Rating by number of players. The distribution starts at 1500 players with a rating of 1000, and increases to a peak of 3500 players at a rating of 1750. There is a sharp increase in the number of players at rating 2000, and then a steep decline until 2750, where the bins disappear.' width=100%}\n:::\n:::\n\n\n\n:::\n\nThe data only includes players whose rating is above 1000, which explains the sharp drop-off on the left edge of the distribution. \nThere are slight hints of bumps in the distribution at about 1200 and at the max of about 1750. \nOther features include the slight spike at 2000, an additional very narrow bump just after 2000, and the long tail after that point.\n\n![Decomposing the histograms into hypothetical distributions that might explain the data.](../images/wrangling/mental-model-dist-components.png){#fig-mental-model-dist-components width=\"50%\" fig-alt=\"A sketch of the outline of a histogram, with 50% opacity curves showing spikes, normal distributions, and other shapes that could be decomposed from the overall shape.\"}\n\nWhat if the different curves are due to activity? We have active and inactive players, and we might find that some of the distribution's features are activity related.\n\n\n::: panel-tabset\n\n##### R {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nChess2020 <- Chess2020 |>\n  mutate(Activity = if_else(Flag %in% c(\"wi\", \"i\"), \"Inactive\", \"Active\"))\n\nggplot(Chess2020, aes(x = DEC20)) + \n  geom_histogram(binwidth = 10) + \n  xlab(\"Rating\") + ylab(\"# Players\") + \n  facet_grid(~Activity)\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-5-5.png){fig-alt='The image features two side-by-side histograms depicting the distribution of player ratings. The left histogram is labeled \"Active\" and shows the number of active players along the y-axis and their ratings along the x-axis, with values ranging from 1000 to approximately 2800. The highest concentration of players is between 1500 and 2000 ratings. The right histogram is labeled \"Inactive\" and similarly represents the distribution for inactive players, with a comparable range on the x-axis. The peak is also in the 1500 to 2000 range, but with slightly fewer players compared to the active category. Both histograms have a grey fill and share the same x and y-axis scales, allowing for direct comparison.' width=1800}\n:::\n:::\n\n\n\n##### Python {-}\n\n::: {.cell}\n\n```{.python .cell-code}\nplt.figure(figsize=(6,3))\n\nChess2020['Activity'] = Chess2020.Flag.replace(to_replace={\"i\":\"Inactive\", \"wi\": \"Inactive\", \"w\": \"Active\"})\nChess2020 = Chess2020.fillna({\"Activity\":\"Active\"})\n\nso.Plot(Chess2020, x = \"DEC20\").add(so.Bars(), so.Hist(binwidth=10)).facet(col=\"Activity\").label(x = \"Rating\", y = \"# Players\").show()\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-6-1.png){fig-alt='The image features two side-by-side histograms depicting the distribution of player ratings. The left histogram is labeled \"Active\" and shows the number of active players along the y-axis and their ratings along the x-axis, with values ranging from 1000 to approximately 2800. The highest concentration of players is between 1500 and 2000 ratings. The right histogram is labeled \"Inactive\" and similarly represents the distribution for inactive players, with a comparable range on the x-axis. The peak is also in the 1500 to 2000 range, but with slightly fewer players compared to the active category. Both histograms have a blue fill and share the same x and y-axis scales, allowing for direct comparison.' width=614}\n:::\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-6-2.png){fig-alt='The image features two side-by-side histograms depicting the distribution of player ratings. The left histogram is labeled \"Active\" and shows the number of active players along the y-axis and their ratings along the x-axis, with values ranging from 1000 to approximately 2800. The highest concentration of players is between 1500 and 2000 ratings. The right histogram is labeled \"Inactive\" and similarly represents the distribution for inactive players, with a comparable range on the x-axis. The peak is also in the 1500 to 2000 range, but with slightly fewer players compared to the active category. Both histograms have a blue fill and share the same x and y-axis scales, allowing for direct comparison.' width=576}\n:::\n:::\n\n\n\n:::\n\nThe left \"bump\" only occurs in Active players, and the right \"bump\" becomes much more clearly a one-sided peak at 2000, and only occurs in Inactive players. \nIt seems likely that players are more likely to become inactive once they reach their perceived peak, and for many players that occurs at 2000. \n\n::: panel-tabset\n\n##### R {-}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nChess2020 <- Chess2020 |> \n  mutate(Bday = as.numeric(Bday), \n         Age = 2020 - Bday,\n         Age = if_else(Age == 2020, NA, Age))\n\nmean(is.na(Chess2020$Age)) # Only missing age for about 2.4% of players\n## [1] 0.02367435\n\nChess2020 |>\n  filter(Activity == \"Active\") |>\n  ggplot(aes(x =Age, y = DEC20)) + \n  geom_point(alpha = 0.01) + \n  geom_smooth() + \n  xlab(\"Age in 2020\") + ylab(\"Rating\") +\n  scale_x_continuous(breaks = (1:10)*10)\n```\n\n::: {.cell-output-display}\n![Age in 2020 and Rating, with a smooth line drawn over top. There is significant overplotting in the data, with clusters between 10 and 20 (Rating between 1000 and 2000, in a parallelogram-ish shape) and another cluster between 45 and 70 (Rating between 1500 and 2000).](02c-good-graphics_files/figure-html/fig-r-rating-age-orig-5.png){#fig-r-rating-age-orig fig-alt='The image is a scatter plot showing the relationship between age in 2020 and ratings. The x-axis represents age, ranging from 0 to 100, while the y-axis represents the rating, ranging from 1000 to 2500. The data points form a dense, black cluster throughout the graph, with a notable upward trend in ratings at ages 10 to 20, which plateaus and slightly declines from around age 30 onwards. A blue line runs through the data, highlighting the central trend of the values: it rises steeply at the beginning, evens out, and then gradually declines past age 50. The background is white with faint grey grid lines.' width=1800}\n:::\n:::\n\n\n\n##### Python {-}\n\n\n::: {.cell}\n\n```{.python .cell-code}\n#%pip install seaborn_objects_recipes\nimport seaborn_objects_recipes as sor\n\nChess2020['Bday'] = pd.to_numeric(Chess2020.Bday)\nChess2020['Age'] = 2020-Chess2020.Bday\nChess2020[Chess2020.Age==2020] = pd.NA\n\nChess2020.Age.isna().mean() # Only missing age for about 2.4% of players\n## np.float64(0.023674352141505425)\n\nactive2020 = Chess2020.query('Activity==\"Active\"')\n\n(\n  so.Plot(active2020, x = 'Age', y = \"DEC20\").\n  add(so.Dot(color='black', alpha=.002)).\n  add(so.Line(), lowess:= sor.Lowess(frac=0.1, gridsize=1000)).\n  label(x = \"Age in 2020\", y = \"Rating\").\n  scale(x = so.Continuous().tick(every=10)).\n  show()\n)\n```\n\n::: {.cell-output-display}\n![Age in 2020 and Rating, with a smooth line drawn over top. There is significant overplotting in the data, with a cluster between 10 and 20 (Rating between 1000 and 2000, in a parallelogram-ish shape) and another cluster between 45 and 70 (Rating between 1500 and 2000). ](02c-good-graphics_files/figure-html/fig-py-rating-age-orig-1.png){#fig-py-rating-age-orig fig-alt='The image is a scatter plot showing the relationship between age in 2020 and ratings. The x-axis represents age, ranging from 0 to 100, while the y-axis represents the rating, ranging from 1000 to 2500. The data points form a dense, black cluster throughout the graph, with a notable upward trend in ratings at ages 10 to 20, which plateaus and slightly declines from around age 30 onwards. A blue line runs through the data, highlighting the central trend of the values: it rises steeply at the beginning, evens out, and then gradually declines past age 50. The background is white with faint grey grid lines.' width=614}\n:::\n:::\n\n\n\n:::\n\nIt appears that players can start getting ratings of $> 1000$ around 8 or 9, at which point they get included in the data. Their rating increases steeply as they age, up to about 20 years old, at which point there is a much more gradual increase to age 30. After that, performance stays steady until age 60 and begins to decline. \n\nHowever, it seems likely that there are some drop-out effects here, as we are only looking at active players, and the number of e.g. 20 year olds playing may decrease from the number of e.g. 16 year olds playing. \n\n::::\n\n**Show the Data** \n\nNotice the utility here of showing the whole data set and then highlighting a trend - we're not really hiding anything from the viewer, so they can still see the messiness, but we've chosen alpha carefully to try to balance density and overplotting with being able to see the points at all.\nThen, we highlight the overall trend with a line that stands out from the black-and-white plot.\n\nWhen you have too much data, it can be challenging to figure out the best way to represent it. Some options:\n\n- Optimize shape and $\\alpha$ selection to show spread and balance spread with overplotting issues.\n- Sample points and only show a subset (the title/subtitle/caption should indicate the sampling method)\n- Use binning and map color to the number of points in each bin.\n\nAdditionally, when you have overplotting but not too much data, it can be helpful to try `geom_jitter` to move similar values into a point cloud around the value. \nThat won't help in this situation, but it's a good trick in general. \n\nThe next set of tabs shows these options as executed in `ggplot2` (for brevity, I'm not showing python/seaborn here). \n\n:::: example\n\n#### Overplotting Solutions\n\n::: panel-tabset\n\n##### Shape and $\\alpha$ Optimization {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nChess2020 |>\n  filter(Activity == \"Active\") |>\n  ggplot(aes(x =Age, y = DEC20)) + \n  geom_point(shape = 1, alpha = .05) + \n  geom_smooth() + \n  xlab(\"Age in 2020\") + ylab(\"Rating\") +\n  scale_x_continuous(breaks = (1:10)*10) + \n  ggtitle(\"Age and Rating\")\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-7-3.png){fig-alt='The image is a scatter plot with a large number of data points, represented as transparent black dots, displaying the relationship between age and rating. The horizontal axis is labeled \"Age in 2020\" and ranges from 0 to 100, while the vertical axis is labeled \"Rating\" with a range from 1000 to 2500. A blue line represents a trend through the data points, indicating an increase in rating from ages 0 to about 30, where it peaks and then gradually declines until the age of 100. There is a slight shaded area around the blue line, suggesting a margin of error or variance. The graphs title is \"Age and Rating.\"' width=1800}\n:::\n:::\n\n\nNotice that  this gives us somewhat better definition of the density areas than @fig-r-rating-age-orig, and allows us to see that the point density is much higher in the cluster between 10 and 20 than it is between 45 and 70.\n\n##### Sampling Points {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nChess2020 |>\n  filter(Activity == \"Active\") |>\n  sample_frac(size = .2, replace = F) |>\n  ggplot(aes(x =Age, y = DEC20)) + \n  geom_point(shape = 1, alpha = .25) + \n  geom_smooth() + \n  xlab(\"Age in 2020\") + ylab(\"Rating\") +\n  scale_x_continuous(breaks = (1:10)*10) + \n  ggtitle(\"Age and Rating\", subtitle = \"For a sample of 20% of the active players in the FIDE 2020 data\")\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-8-1.png){fig-alt='The image is a scatter plot with a large number of data points, represented as transparent black dots, displaying the relationship between age and rating. The horizontal axis is labeled \"Age in 2020\" and ranges from 0 to 100, while the vertical axis is labeled \"Rating\" with a range from 1000 to 2500. A blue line represents a trend through the data points, indicating an increase in rating from ages 0 to about 30, where it peaks and then gradually declines until the age of 100. There is a slight shaded area around the blue line, suggesting a margin of error or variance. The graphs title is \"Age and Rating\" with subtitle \"For a sample of 20% of the active players in the FIDE 2020 data.\"' width=1800}\n:::\n:::\n\n\n\n##### Binning {-}\n\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nChess2020 |>\n  filter(Activity == \"Active\") |>\n  ggplot(aes(x =Age, y = DEC20)) + \n  geom_hex() + \n  scale_fill_gradient(low = \"#E8EBF8\", high = \"#1432BA\", trans=\"log10\") + \n  geom_smooth(color = \"orange\") + \n  xlab(\"Age in 2020\") + ylab(\"Rating\") +\n  scale_x_continuous(breaks = (1:10)*10) + \n  ggtitle(\"Age and Rating\")\n\n\n\nChess2020 |>\n  filter(Activity == \"Active\") |>\n  ggplot(aes(x =Age, y = DEC20)) + \n  geom_bin_2d(binwidth = list(x = 2, y = 100)) + \n  scale_fill_gradient(low = \"#E8EBF8\", high = \"#1432BA\", trans=\"log10\") + \n  geom_smooth(color = \"orange\") + \n  xlab(\"Age in 2020\") + ylab(\"Rating\") +\n  scale_x_continuous(breaks = (1:10)*10) + \n  ggtitle(\"Age and Rating\")\n```\n\n::: {.cell-output-display}\n![Two different binned plots using hexagonal and rectangular bins, respectively. ](02c-good-graphics_files/figure-html/fig-data-reduction-binning-1.png){#fig-data-reduction-binning-1 fig-alt='The image is a hexbin plot depicting the relationship between age and chess rating in 2020. The horizontal axis represents age, ranging from 0 to 100, while the vertical axis represents rating, ranging from 1000 to 3000. The plot is populated with hexagonal bins that vary in shades of blue, indicating the density of data points, with darker shades representing higher counts. A smooth orange trend line with a slight upward curve from ages 10 to 20, then slightly declines around age 45, leveling and finally tapering off by age 100. A color scale on the right shows the count with breaks of 10, 10, 100, and 1000.' width=1800}\n:::\n\n::: {.cell-output-display}\n![Two different binned plots using hexagonal and rectangular bins, respectively. ](02c-good-graphics_files/figure-html/fig-data-reduction-binning-2.png){#fig-data-reduction-binning-2 fig-alt='The image is a 2d-binned plot depicting the relationship between age and chess rating in 2020. The horizontal axis represents age, ranging from 0 to 100, while the vertical axis represents rating, ranging from 1000 to 3000. The plot is populated with square bins that vary in shades of blue, indicating the density of data points, with darker shades representing higher counts. A smooth orange trend line with a slight upward curve from ages 10 to 20, then slightly declines around age 45, leveling and finally tapering off by age 100. A color scale on the right shows the count with breaks of 10, 10, 100, and 1000.' width=1800}\n:::\n:::\n\n\nThere are several intentional but non-trivial modifications here:\n\n- The fill scale has been set with low as a very light blue and high as a dark blue (the default goes the other way, which is usually not a \"natural\" mapping -- more saturation = more of the thing)\n- The fill scale uses a log10 transformation. When there is a wide range of values (e.g. from 0 to 1000) you can fit more information into the finite number of shades of color we can perceive if you use a log scale. Think about a topographic map -- you do not necessarily want linear scaling for the lines if you're limited to only 7 lines. \n- The smooth line has been changed to orange, as orange vs. blue is still a relatively safe set of colors to use for all types of colorblindness.\n\nWhile this is no longer showing the raw data (as we've binned and computed a statistic), it's still reasonably close to the raw data. This is perhaps the first plot where we get a true sense of how many actively playing children there are in chess matches, and how dense they are relative to the distribution of ratings once out of childhood. \n\n:::\n\n::::\n\n:::: example\n#### Age, Gender, and Ratings\n\nReturning to our exploration, let's consider the age distribution of active vs. inactive players. \n\n::: panel-tabset\n\n##### R {-}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nChess2020 |>\n  # filter(Activity == \"Active\") |>\n  ggplot(aes(x = Age, color = Activity)) + \n  geom_density()+\n  xlab(\"Age in 2020\") +\n  scale_x_continuous(breaks = (1:10)*10)\n```\n\n::: {.cell-output-display}\n![The image is a line graph displaying density distribution of two different activities categorized as \"Active\" and \"Inactive\" over a range of ages in 2020. The x-axis represents age, spanning from 0 to 100, and the y-axis represents density, ranging from 0.00 to approximately 0.035. The \"Active\" category is depicted with a red line, while the \"Inactive\" category is shown with a blue line. The red line peaks sharply between ages 10 and 15, indicating higher density, and then gradually decreases with a small bump at 30 and a large bump at 50. The blue line peaks slightly later, closer to age 20, and decreases more steadily, with smaller fluctuations. Both lines taper off as age approaches 100. On the right, a legend identifies the color coding for each category. The graph is set on a white background with a grid.](02c-good-graphics_files/figure-html/unnamed-chunk-9-1.png){width=1800}\n:::\n:::\n\n\n\n##### Python {-}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nplt.figure(figsize=(6,4))\n\n(\n  so.Plot(Chess2020, x = 'Age', color = 'Activity').\n  add(so.Line(), so.KDE()).\n  label(x = \"Age in 2020\", y = \"Density\").\n  scale(x = so.Continuous().tick(every=10)).\n  show()\n)\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-10-1.png){fig-alt='The image is a line graph displaying age density in 2020 for two activity categories: \"Active\" and \"Inactive.\" The x-axis represents ages ranging from 0 to 110, while the y-axis represents density ranging from 0.0000 to 0.0200. The \"Active\" category is shown with a blue line and the \"Inactive\" category with an orange line. Both lines start at age ~0, with the \"Active\" line peaking sharply between ages 10 and 15, indicating higher density, and then gradually decreasing with a small bump at 30 and a large bump at 50. The \"Inactive\" line follows a similar initial trend but peaks slightly later, closer to age 20, and decreases more steadily, with smaller fluctuations alongside the \"Active\" line. The background has a grid layout, and a legend on the right side indicates the color associated with each activity type.' width=614}\n:::\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-10-2.png){fig-alt='The image is a line graph displaying age density in 2020 for two activity categories: \"Active\" and \"Inactive.\" The x-axis represents ages ranging from 0 to 110, while the y-axis represents density ranging from 0.0000 to 0.0200. The \"Active\" category is shown with a blue line and the \"Inactive\" category with an orange line. Both lines start at age ~0, with the \"Active\" line peaking sharply between ages 10 and 15, indicating higher density, and then gradually decreasing with a small bump at 30 and a large bump at 50. The \"Inactive\" line follows a similar initial trend but peaks slightly later, closer to age 20, and decreases more steadily, with smaller fluctuations alongside the \"Active\" line. The background has a grid layout, and a legend on the right side indicates the color associated with each activity type.' width=576}\n:::\n:::\n\n\n:::\n\nWe also have information on players' gender. \nChess has traditionally been perceived as very male-dominated, but let's see if that stereotype holds up to the data.\n\n::: panel-tabset\n\n##### R {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Chess2020, aes(x = Age, color = Sex)) + \n  geom_density(aes(y = after_stat(count)))\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-11-5.png){fig-alt='The image is a line graph displaying age distribution data for two sexes, labeled as \"F\" and \"M.\" The x-axis represents \"Age,\" ranging from 0 to 100, and the y-axis represents \"count,\" going from 0 to 10,000, with grid lines for reference. Two lines are depicted: a red line for \"F\" (female) and a blue line for \"M\" (male). The blue line peaks sharply around age 25 with a count slightly above 7,500 before gradually declining with age. The red line also peaks around age 25, though lower, with a count just above 2,500, and then slopes downward more smoothly. The legend on the right side uses colored boxes to label each line according to \"Sex.\"' width=1800}\n:::\n:::\n\n\n##### Python {-}\n\n\n::: {.cell}\n\n```{.python .cell-code}\n\n(\n  so.Plot(Chess2020, x = 'Age', color = 'Sex').\n  add(so.Line(), so.KDE(common_norm = True, common_grid = True)).\n  label(x = \"Age in 2020\", y = \"Density\").\n  scale(x = so.Continuous().tick(every=10)).\n  show()\n)\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-12-1.png){fig-alt='The image is a line graph displaying age distribution data for two sexes, labeled as \"F\" and \"M.\" The x-axis represents \"Age,\" ranging from 0 to 100, and the y-axis represents \"Density,\" going from 0 to 0.025, with grid lines for reference. Two lines are depicted: a red line for \"F\" (female) and a blue line for \"M\" (male). The blue line peaks sharply around age 25 with a count slightly below 0.025 before gradually declining with age. The red line also peaks around age 25, though lower, with a count just above 0.005, and then slopes downward more smoothly. The legend on the right side uses colored boxes to label each line according to \"Sex.\"' width=614}\n:::\n:::\n\n\n:::\n\nOk, so there are clearly fewer females who have rating $> 1000$ according to FIDE. \nWhat if we look at active vs. inactive players of both genders?\n\n\n\n::: panel-tabset\n\n##### R {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nChess2020 |>\nggplot(aes(x = Age, color = Sex)) + \n  geom_density(aes(y = after_stat(count))) + \n  facet_grid(Activity~.)\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-13-3.png){fig-alt='The image consists of two stacked density plots representing age distributions for active and inactive groups, segmented by sex. Both plots feature a horizontal x-axis labeled \"Age\" and a vertical y-axis labeled \"count.\" The upper plot is labeled \"Active,\" and the lower plot is labeled \"Inactive,\" with these labels placed vertically on the right sides of the graphs. Each plot shows two curves, a red curve representing female (F) data and a blue curve representing male (M) data. In both plots, the male curve exhibits a higher initial peak compared to the female curve, indicating more males in the younger age categories. The legend on the right differentiates the colors associated with each sex. The peak age for both genders is lower in active players than in inactive players, indicating that there may have been a shift towards starting players at younger ages within the chess community.' width=1800}\n:::\n:::\n\n\n##### Python {-}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nplt.figure(figsize=(6,5))\n\n(\n  so.Plot(Chess2020, x = 'Age', color = 'Sex').\n  add(so.Line(), so.KDE(common_norm = True, common_grid = True)).\n  label(x = \"Age in 2020\", y = \"Density\").\n  facet(row = \"Activity\").\n  scale(x = so.Continuous().tick(every=10)).\n  show()\n)\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-14-1.png){fig-alt='The image consists of two stacked density plots representing age distributions for active and inactive groups, segmented by sex. Both plots feature a horizontal x-axis labeled \"Age\" and a vertical y-axis labeled \"Density.\" The upper plot is labeled \"Active,\" and the lower plot is labeled \"Inactive,\" with these labels placed vertically on the right sides of the graphs. Each plot shows two curves, a red curve representing female (F) data and a blue curve representing male (M) data. In both plots, the male curve exhibits a higher initial peak compared to the female curve, indicating more males in the younger age categories. The legend on the right differentiates the colors associated with each sex. The peak age for both genders is lower in active players than in inactive players, indicating that there may have been a shift towards starting players at younger ages within the chess community.' width=614}\n:::\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-14-2.png){fig-alt='The image consists of two stacked density plots representing age distributions for active and inactive groups, segmented by sex. Both plots feature a horizontal x-axis labeled \"Age\" and a vertical y-axis labeled \"Density.\" The upper plot is labeled \"Active,\" and the lower plot is labeled \"Inactive,\" with these labels placed vertically on the right sides of the graphs. Each plot shows two curves, a red curve representing female (F) data and a blue curve representing male (M) data. In both plots, the male curve exhibits a higher initial peak compared to the female curve, indicating more males in the younger age categories. The legend on the right differentiates the colors associated with each sex. The peak age for both genders is lower in active players than in inactive players, indicating that there may have been a shift towards starting players at younger ages within the chess community.' width=576}\n:::\n:::\n\n\n:::\n\nIt is clear that there are a few interesting things going on in this plot. \nFirst, there is about a 5-year shift left in the age distribution of active players compared to inactive players, suggesting the possibility of demographic changes -- either players starting earlier, young players reaching >1000 rating more frequently, or some other factor.\n\nSecond, it is clear that the behavior of men playing chess is different than that of women: men continue playing well into their 60s, while women usually quit before age 40. \n\n::::\n\nObservations: \n\n- It is helpful, when possible, to show the full data, with aesthetics and facets chosen to highlight different variable combinations.\n\n- Summary statistics can be useful to highlight relationships amid noise.\n\n- Data reduction strategies (binning, alpha blending, sampling) can be useful when overplotting obscures the information present in the chart. \n\n\n### Annotations {#sec-annotation}\n\nAnnotations (labels, arrows, highlighted information, and captions) allow you to communicate specific parts of the data. \n\nGood annotations help readers understand key findings, interpret data without having to reference legends, and see (and make sense of) structure, changes, and anomalies in the data. \n\n:::: demo\n\n#### COVID - Flattening the curve\n\nIn early 2020, the news started mentioning a cluster of pneumonia cases in China.\nThe first cases were detected in the US in Washington state (Jan 20). A second case was confirmed on January 24 in Illinois, and the third-fifth cases were confirmed on January 26  in Arizona and California. By mid-February, Italy had become another hotspot. \n\nOn March 9, one of the classic graphics of the COVID-19 pandemic was released (@fig-flatten-curve), showing the power of both annotation and animation.\n\n![This #FlattenTheCurve graph surged to prominence this week. But it didn't say why it is so bad when medical treatment capacity is overwhelmed -> mortality rate rises. So, here is a small animation that shows the value of early containment and double dividend of delay. #Covid19. Image by Alexander Radtke (@lxrdk), [posted on Twitter](https://web.archive.org/web/20200312121759/https://twitter.com/alxrdk/status/1237021885239635969).](../images/wrangling/flatten-the-curve-smaller.gif){#fig-flatten-curve width=\"100%\" fig-alt=\"A plot labeled 'Why it is so important to act early on COVID-19', with x-axis showing time and y-axis showwing people in need of medical care. A shift to \"early containment\" pushes the case curve out over time (with the same number of cases overall), and simultaneously, a curve showing treatment capacity changes, until the treatment capacity is above the number of people in need of medical care. The proportion of the case curve above the treatment capacity is shaded in purple and corresponds to badly treated patients (high mortality), while the proportion of the case curve below treatment capacity represents properly cared-for patients (low mortality). As the curve moves, annotations pop up showing the effect of medical workers becoming ill (reduced treatment capacity) and the effect of medical research (increased treatment capacity).\"}\n\nOn March 11, the WHO declared COVID-19 a pandemic. \nBy March 15, many states issued stay-home orders and only essential workers were allowed out. \n\n::::\n\n:::: example\n\n#### Different Types of Annotations\n\nIn this example, we'll stay on the same COVID theme, but we'll use [COVID (SARS-CoV-2) case counts in New York City](https://data.cityofnewyork.us/Health/COVID-19-Daily-Counts-of-Cases-Hospitalizations-an/rc75-m7u3/about_data), which was one of the big hotspots in the US early in the pandemic.\nThis example will be done in `ggplot2` because annotations tend to be more of a pain to create manually in seaborn.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(lubridate)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(zoo) # rollapply function\n\ncovid <- read_csv(\"../data/COVID-19_Daily_Counts_of_Cases,_Hospitalizations,_and_Deaths_20251020.csv\") |>\n  select(date_of_interest:DEATH_COUNT) |>\n  mutate(date = mdy(date_of_interest)) |>\n  select(-date_of_interest, -PROBABLE_CASE_COUNT) |>\n  mutate(`Case_Count_-_Week_Average` = rollapply(CASE_COUNT, 7, mean, align=\"center\", fill = \"NA\")) |>\n  pivot_longer(-date, names_to = \"variable\", values_to = \"count\") |>\n  mutate(variable = str_replace_all(variable, \"_\", \" \") |> str_to_title()) |>\n  mutate(variable = str_replace_all(variable, pattern = c(\"Case Count\" = \"Cases\", \"Death Count\" = \"Deaths\", \"Hospitalized Count\" = \"Hospitalizations\")))\n\nhead(covid)\n## # A tibble: 6 × 3\n##   date       variable             count\n##   <date>     <chr>                <dbl>\n## 1 2020-02-29 Cases                    1\n## 2 2020-02-29 Hospitalizations         1\n## 3 2020-02-29 Deaths                   0\n## 4 2020-02-29 Cases - Week Average    NA\n## 5 2020-03-01 Cases                    0\n## 6 2020-03-01 Hospitalizations         1\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_values <- c(\"Cases\" = \"#8780de\", \"Cases - Week Average\" = \"#544ad0\", \"Deaths\" = \"#ff7800\", \"Hospitalizations\" = \"#26a269\")\nalpha_values <- c(\"Cases\" = .5, \"Cases - Week Average\" = 1, \"Deaths\" = 1, \"Hospitalizations\" = 1)\n\np <- filter(covid, date > ymd(20200101), date <= ymd(20201231)) |>\nggplot(aes(x = date, y = count, color = variable, alpha = variable)) + \n  geom_line() +\n  scale_alpha_manual(\"Counts\", values = alpha_values) + \n  scale_color_manual(\"Counts\", values = color_values) + \n  ylab(\"# Recorded People\") +\n  ggtitle(\"SARS-CoV2 Cases, Hospitalizations, and Deaths in NYC\") +\n  theme(axis.title.x = element_blank())\n\np\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-16-1.png){width=2100}\n:::\n:::\n\n\nNow, this is a perfectly useful plot, but as you'll remember from the short-term memory section, direct annotation can be more effective than using a legend. Let's try that. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_annotate_lines <- p +  \n  theme(legend.position = \"none\") +\n  annotate(\"text\", y = 2700, x = ymd(\"20201201\"), label = \"Cases (7d avg)\", color = color_values[2], hjust = 1) + \n  annotate(\"text\", y = 5500, x = ymd(\"20201225\"), label = \"Daily Cases\\n    (work week variation)\", color = color_values[1], hjust = 1) + \n  annotate(\"text\", y = 520, x = ymd(\"20201231\"), label = \"Hospitalizations\", color = color_values[4], hjust = 1) + \n  annotate(\"text\", y = -120, x = ymd(\"20201231\"), label = \"Deaths\", color = color_values[3], hjust = 1)\n\n\np_annotate_lines\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-17-1.png){width=2100}\n:::\n:::\n\n\nThis is nice -- we don't have to refer to the legend and each line is labeled on the chart directly. \nWe also have devoted more room on the chart to the data itself, which is a plus. \n\nAnnotations can also be used to provide useful contextual information. \n\n::: {.callout collapse=true}\n##### Contextual Information - COVID in NYC, 2020\n\nThe [user guide for the data](../data/COVID19_CaseHospDeath_UserGuide_20201202.docx) provides the following information: \n\n> This file includes data since February 29, 2020, which is the date that the Health Department classifies as the start of the COVID-19 outbreak in NYC as it was the date of the first laboratory-confirmed COVID-19 case.\n\n>  In March, April, and early May, the NYC Health Department had discouraged people with mild and moderate symptoms from being tested, so data from those months primarily represent people with more severe illness. Until mid-May, patients with more severe COVID-19 illness were more likely to have been tested and included in these data. \n\nWe can get additional context on the pandemic timeline from the [CDC Museum COVID-19 Timeline](https://www.cdc.gov/museum/timeline/covid19.html):\n\n- March 15, 2020 - States begin to implement shutdowns in order to prevent the spread of COVID-19. The New York City public school system— the largest school system in the U.S., with 1.1 million students— shuts down, while Ohio calls for restaurants and bars to close.\n\n- March 28, 2020 - CDC issues a domestic travel advisory for New York, New Jersey, and Connecticut due to high community transmission of COVID-19 in those states, urging residents to refrain from all non-essential domestic travel for at least 14 days, effective immediately.\n\n- April 10, 2020 - With 159,937 confirmed cases, New York State now has more reported cases of COVID-19 than Spain (153,000), Italy (143,000), or China (82,000). Amid critical hospital bed and ventilator shortages, aerial images emerge of workers in hazmat suits burying coffins in mass graves at Hart Island off the Bronx, an area used for over 150 years by New York City officials as a mass burial site for those with no next-of-kin or who cannot afford funerals.\n\n:::\n\nLet's see whether we can add this information to the chart too. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_travel_adv <- filter(covid, date == ymd(20200328), \n                           variable == \"Cases - Week Average\")$count\ncount_mass_graves <- filter(covid, date == ymd(20200410), \n                            variable == \"Deaths\")$count\n\np_info_annot <- \n  p_annotate_lines + \n  scale_x_date(expand = expansion(add=c(75, 0)), \n               date_labels = \"%b %y\", date_breaks = \"1 month\") + \n  \n  annotate(\"rect\", \n           xmin = ymd(20200301), xmax = ymd(20200515), ymin = 0, ymax = 6500, \n           alpha = 0.05, fill = \"black\") + \n  annotate(\"text\", x = ymd(20200520), y = 6500, \n           label = \"Tests available for\\nsevere cases only\",\n           hjust = 0, vjust = 1, color = \"grey30\") + \n  \n  annotate(\"segment\", linetype = \"dotted\", \n           x = ymd(20200229), xend = ymd(20200229), \n           y = 500, yend = 0) + \n  annotate(\"segment\", linetype = \"dotted\", \n           x = ymd(20200229), xend = ymd(20200224), \n           y = 500, yend = 500) + \n  annotate(\"text\", x = ymd(20200224), y = 500, \n           label = \"1st Pos\\nCOVID Test\", hjust = 1, vjust = 0.5) + \n  \n  annotate(\"segment\", linetype = \"dotted\", \n           x = ymd(20200315), xend = ymd(20200315), \n           y = 1350, yend = 0) + \n  annotate(\"segment\", linetype = \"dotted\", \n           x = ymd(20200315), xend = ymd(20200305), \n           y = 1350, yend = 1350) + \n  annotate(\"text\", x = ymd(20200305), y = 1350, \n           label = \"NYC Schools\\nShut Down\", hjust = 1, vjust = 0.5) + \n  \n  annotate(\"segment\", linetype = \"dotted\",\n           x = ymd(20200328), xend = ymd(20200328), \n           y = 0, yend = count_travel_adv) + \n  annotate(\"segment\", linetype = \"dotted\", \n           x = ymd(20200328), xend = ymd(20200318), \n           y = count_travel_adv, yend = count_travel_adv) + \n  annotate(\"text\", x = ymd(20200318), y = count_travel_adv, \n           label = \"CDC Issues\\nTravel Advisory\\nfor NY State\", \n           hjust = 1, vjust = 0.5)  + \n  \n  annotate(\"segment\", linetype = \"dotted\", \n           x = ymd(20200410), xend = ymd(20200410), \n           y = 0, yend = count_mass_graves) + \n  annotate(\"text\", x = ymd(20200405), y = -100, \n           label = \"Mass graves in NYC\", hjust = 0, vjust = 1) \n\np_info_annot\n```\n\n::: {.cell-output-display}\n![](02c-good-graphics_files/figure-html/unnamed-chunk-18-1.png){width=2100}\n:::\n:::\n\nWe had to slightly extend the x-axis to accommodate the annotations, but this also has a rhetorical purpose -- NYC didn't have its first positive test until March 20, but the actual spread of cases in NYC was likely occurring well before that date -- they just couldn't be measured.\n\nIt is possible to add too many annotations to a chart and clutter it up. The last chart above is getting close, and it would be reasonable to e.g. omit the 1st positive covid test annotation because it's implicit, but the additional context may also be useful. \n\nWhat variations would you add?\n\n::::\n\n## Evaluating Graphics: Effectiveness, Clarity, and Comprehension {#sec-checklist}\n\nWhen evaluating a chart that you hope to use for presentation, it is important to first think through what the goal of the chart is. \nThen, it can be helpful to work through the grammar of graphics to ensure that each element of the chart contributes to the overall goal. \n\n\n1. Message\n\n    - What is the message you hope to convey?\n    - What elements of the data are necessary for that message?\n    - What level of audience are you targeting? What education, expectations, culture, and perceptual abilities or challenges do they have?\n\n2. Mappings\n\n    - [ ] Are mappings appropriate for the type of variable? \n    - [ ] Do the $x$ and $y$ mappings show variables that are most important for accurate quantitative comparisons?\n    - [ ] Are aesthetic mappings carefully chosen to minimize clutter?\n    - [ ] Are aesthetic mappings chosen for accessibility? If color is used, is another aesthetic also used to dual-encode the information?\n\n3. Geometries\n\n    - [ ] Are appropriate geoms used for the data type and comparison goals?\n    - [ ] If there are multiple layers, \n        - [ ] Do the layers work together to show the same aspects of the data at different levels? \n        - [ ] Do layers enhance clarity, or increase clutter?\n    - [ ] Are key patterns visible?\n\n4. Scales and Transformations\n\n  - Location scales\n  \n      - [ ] Is the data well distributed across the full range of the scale? \n          - If most of the data is compressed into a small part of the scale consider a scale transformation (log, sqrt) or a plot-within-a-plot (`ggpp`) to show both the compressed area and the total range. \n      - [ ] If the $x$ and $y$ axis scales show the same units, does the aspect ratio of the plot reflect this?\n      \n  - Color scales\n  \n      - [ ] Is the color scale used the most accessible scale for the data? \n      - [ ] If color is mapped to a continuous value, is the scale transformed to maximize the contrast across the range of the variable?     \n      Log transforms can often be useful to increase contrast between different orders of magnitude of a continuous value. \n      \n  - Transformations\n  \n      - [ ] Are any transformations used clearly identified? e.g. a log scale should have ticks that are not uniformly spaced to provide an additional cue that the transformation is present.\n      - [ ] Are transformed elements labeled clearly?\n      - [ ] Does the transformation improve comprehension?\n    - Coordinate Systems\n      - [ ] Is the coordinate system appropriate for the message?    \n      If polar coordinates are used, is there a clear justification for deviating from better-understood cartesian coordinates?\n\n5. Facets and Layout\n\n    - [ ] Does the layout support the comparisons of interest?    \n    Are facets that viewers may want to compare ordered so that they are adjacent?\n    - [ ] How much effort is required to make secondary comparisons?    \n    Consider visual distance traveled between elements in the secondary comparison, alignment of axes, etc. \n    - [ ] Are there too many facets shown?     \n    How does the number of facets required for the comparison compare to the overall increase in visual clutter?\n    - [ ] Are facet labels clear and easy to understand?\n\n6. Annotations\n\n    - [ ] Are key points annotated clearly?\n    - [ ] Do annotations reduce clutter?\n    - [ ] Would it be more effective to replace legends with on-plot labels, or would this increase visual clutter?\n    - [ ] Does the design support the overall message of the plot?\n    - [ ] Are artifacts in the data annotated and explained?\n  \n\n## References {#sec-good-graphics-refs}\n",
    "supporting": [
      "02c-good-graphics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}